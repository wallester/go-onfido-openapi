/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties{}

// FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties struct for FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties
type FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties struct {
	// A floating point number between 0 and 1 that expresses how similar the two faces are, where 1 is a perfect match.
	Score *float32 `json:"score,omitempty"`
	// The UUID for the document containing the extracted face that was used for face matching.
	DocumentId *string `json:"document_id,omitempty"`
}

// NewFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties instantiates a new FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties() *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties {
	this := FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties{}
	return &this
}

// NewFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchPropertiesWithDefaults instantiates a new FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchPropertiesWithDefaults() *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties {
	this := FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) GetScore() float32 {
	if o == nil || IsNil(o.Score) {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) GetScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) SetScore(v float32) {
	o.Score = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) GetDocumentId() string {
	if o == nil || IsNil(o.DocumentId) {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) GetDocumentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentId) {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) HasDocumentId() bool {
	if o != nil && !IsNil(o.DocumentId) {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) SetDocumentId(v string) {
	o.DocumentId = &v
}

func (o FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.DocumentId) {
		toSerialize["document_id"] = o.DocumentId
	}
	return toSerialize, nil
}

type NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties struct {
	value *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties
	isSet bool
}

func (v NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) Get() *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties {
	return v.value
}

func (v *NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) Set(val *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties(val *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) *NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties {
	return &NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties{value: val, isSet: true}
}

func (v NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatchProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
