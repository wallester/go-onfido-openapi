/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the ProofOfAddressBreakdownImageIntegrityBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProofOfAddressBreakdownImageIntegrityBreakdown{}

// ProofOfAddressBreakdownImageIntegrityBreakdown struct for ProofOfAddressBreakdownImageIntegrityBreakdown
type ProofOfAddressBreakdownImageIntegrityBreakdown struct {
	ImageQuality *DocumentBreakdownDataComparisonBreakdownIssuingCountry `json:"image_quality,omitempty"`
}

// NewProofOfAddressBreakdownImageIntegrityBreakdown instantiates a new ProofOfAddressBreakdownImageIntegrityBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProofOfAddressBreakdownImageIntegrityBreakdown() *ProofOfAddressBreakdownImageIntegrityBreakdown {
	this := ProofOfAddressBreakdownImageIntegrityBreakdown{}
	return &this
}

// NewProofOfAddressBreakdownImageIntegrityBreakdownWithDefaults instantiates a new ProofOfAddressBreakdownImageIntegrityBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProofOfAddressBreakdownImageIntegrityBreakdownWithDefaults() *ProofOfAddressBreakdownImageIntegrityBreakdown {
	this := ProofOfAddressBreakdownImageIntegrityBreakdown{}
	return &this
}

// GetImageQuality returns the ImageQuality field value if set, zero value otherwise.
func (o *ProofOfAddressBreakdownImageIntegrityBreakdown) GetImageQuality() DocumentBreakdownDataComparisonBreakdownIssuingCountry {
	if o == nil || IsNil(o.ImageQuality) {
		var ret DocumentBreakdownDataComparisonBreakdownIssuingCountry
		return ret
	}
	return *o.ImageQuality
}

// GetImageQualityOk returns a tuple with the ImageQuality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProofOfAddressBreakdownImageIntegrityBreakdown) GetImageQualityOk() (*DocumentBreakdownDataComparisonBreakdownIssuingCountry, bool) {
	if o == nil || IsNil(o.ImageQuality) {
		return nil, false
	}
	return o.ImageQuality, true
}

// HasImageQuality returns a boolean if a field has been set.
func (o *ProofOfAddressBreakdownImageIntegrityBreakdown) HasImageQuality() bool {
	if o != nil && !IsNil(o.ImageQuality) {
		return true
	}

	return false
}

// SetImageQuality gets a reference to the given DocumentBreakdownDataComparisonBreakdownIssuingCountry and assigns it to the ImageQuality field.
func (o *ProofOfAddressBreakdownImageIntegrityBreakdown) SetImageQuality(v DocumentBreakdownDataComparisonBreakdownIssuingCountry) {
	o.ImageQuality = &v
}

func (o ProofOfAddressBreakdownImageIntegrityBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProofOfAddressBreakdownImageIntegrityBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageQuality) {
		toSerialize["image_quality"] = o.ImageQuality
	}
	return toSerialize, nil
}

type NullableProofOfAddressBreakdownImageIntegrityBreakdown struct {
	value *ProofOfAddressBreakdownImageIntegrityBreakdown
	isSet bool
}

func (v NullableProofOfAddressBreakdownImageIntegrityBreakdown) Get() *ProofOfAddressBreakdownImageIntegrityBreakdown {
	return v.value
}

func (v *NullableProofOfAddressBreakdownImageIntegrityBreakdown) Set(val *ProofOfAddressBreakdownImageIntegrityBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableProofOfAddressBreakdownImageIntegrityBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableProofOfAddressBreakdownImageIntegrityBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProofOfAddressBreakdownImageIntegrityBreakdown(val *ProofOfAddressBreakdownImageIntegrityBreakdown) *NullableProofOfAddressBreakdownImageIntegrityBreakdown {
	return &NullableProofOfAddressBreakdownImageIntegrityBreakdown{value: val, isSet: true}
}

func (v NullableProofOfAddressBreakdownImageIntegrityBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProofOfAddressBreakdownImageIntegrityBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
