/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the ProofOfAddressBreakdownDocumentClassificationBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProofOfAddressBreakdownDocumentClassificationBreakdown{}

// ProofOfAddressBreakdownDocumentClassificationBreakdown struct for ProofOfAddressBreakdownDocumentClassificationBreakdown
type ProofOfAddressBreakdownDocumentClassificationBreakdown struct {
	SupportedDocument *DocumentBreakdownDataComparisonBreakdownIssuingCountry `json:"supported_document,omitempty"`
}

// NewProofOfAddressBreakdownDocumentClassificationBreakdown instantiates a new ProofOfAddressBreakdownDocumentClassificationBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProofOfAddressBreakdownDocumentClassificationBreakdown() *ProofOfAddressBreakdownDocumentClassificationBreakdown {
	this := ProofOfAddressBreakdownDocumentClassificationBreakdown{}
	return &this
}

// NewProofOfAddressBreakdownDocumentClassificationBreakdownWithDefaults instantiates a new ProofOfAddressBreakdownDocumentClassificationBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProofOfAddressBreakdownDocumentClassificationBreakdownWithDefaults() *ProofOfAddressBreakdownDocumentClassificationBreakdown {
	this := ProofOfAddressBreakdownDocumentClassificationBreakdown{}
	return &this
}

// GetSupportedDocument returns the SupportedDocument field value if set, zero value otherwise.
func (o *ProofOfAddressBreakdownDocumentClassificationBreakdown) GetSupportedDocument() DocumentBreakdownDataComparisonBreakdownIssuingCountry {
	if o == nil || IsNil(o.SupportedDocument) {
		var ret DocumentBreakdownDataComparisonBreakdownIssuingCountry
		return ret
	}
	return *o.SupportedDocument
}

// GetSupportedDocumentOk returns a tuple with the SupportedDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProofOfAddressBreakdownDocumentClassificationBreakdown) GetSupportedDocumentOk() (*DocumentBreakdownDataComparisonBreakdownIssuingCountry, bool) {
	if o == nil || IsNil(o.SupportedDocument) {
		return nil, false
	}
	return o.SupportedDocument, true
}

// HasSupportedDocument returns a boolean if a field has been set.
func (o *ProofOfAddressBreakdownDocumentClassificationBreakdown) HasSupportedDocument() bool {
	if o != nil && !IsNil(o.SupportedDocument) {
		return true
	}

	return false
}

// SetSupportedDocument gets a reference to the given DocumentBreakdownDataComparisonBreakdownIssuingCountry and assigns it to the SupportedDocument field.
func (o *ProofOfAddressBreakdownDocumentClassificationBreakdown) SetSupportedDocument(v DocumentBreakdownDataComparisonBreakdownIssuingCountry) {
	o.SupportedDocument = &v
}

func (o ProofOfAddressBreakdownDocumentClassificationBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProofOfAddressBreakdownDocumentClassificationBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SupportedDocument) {
		toSerialize["supported_document"] = o.SupportedDocument
	}
	return toSerialize, nil
}

type NullableProofOfAddressBreakdownDocumentClassificationBreakdown struct {
	value *ProofOfAddressBreakdownDocumentClassificationBreakdown
	isSet bool
}

func (v NullableProofOfAddressBreakdownDocumentClassificationBreakdown) Get() *ProofOfAddressBreakdownDocumentClassificationBreakdown {
	return v.value
}

func (v *NullableProofOfAddressBreakdownDocumentClassificationBreakdown) Set(val *ProofOfAddressBreakdownDocumentClassificationBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableProofOfAddressBreakdownDocumentClassificationBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableProofOfAddressBreakdownDocumentClassificationBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProofOfAddressBreakdownDocumentClassificationBreakdown(val *ProofOfAddressBreakdownDocumentClassificationBreakdown) *NullableProofOfAddressBreakdownDocumentClassificationBreakdown {
	return &NullableProofOfAddressBreakdownDocumentClassificationBreakdown{value: val, isSet: true}
}

func (v NullableProofOfAddressBreakdownDocumentClassificationBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProofOfAddressBreakdownDocumentClassificationBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
