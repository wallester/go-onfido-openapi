/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the DocumentBreakdownVisualAuthenticityBreakdownOther type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentBreakdownVisualAuthenticityBreakdownOther{}

// DocumentBreakdownVisualAuthenticityBreakdownOther This sub-breakdown is returned for backward compatibility reasons. Its value will be consider when at least one of the other breakdowns is consider, and clear when all the other breakdowns are clear.
type DocumentBreakdownVisualAuthenticityBreakdownOther struct {
	Result     *string                `json:"result,omitempty"`
	Properties map[string]interface{} `json:"properties,omitempty"`
}

// NewDocumentBreakdownVisualAuthenticityBreakdownOther instantiates a new DocumentBreakdownVisualAuthenticityBreakdownOther object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentBreakdownVisualAuthenticityBreakdownOther() *DocumentBreakdownVisualAuthenticityBreakdownOther {
	this := DocumentBreakdownVisualAuthenticityBreakdownOther{}
	return &this
}

// NewDocumentBreakdownVisualAuthenticityBreakdownOtherWithDefaults instantiates a new DocumentBreakdownVisualAuthenticityBreakdownOther object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentBreakdownVisualAuthenticityBreakdownOtherWithDefaults() *DocumentBreakdownVisualAuthenticityBreakdownOther {
	this := DocumentBreakdownVisualAuthenticityBreakdownOther{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdownOther) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdownOther) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdownOther) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *DocumentBreakdownVisualAuthenticityBreakdownOther) SetResult(v string) {
	o.Result = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdownOther) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdownOther) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdownOther) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *DocumentBreakdownVisualAuthenticityBreakdownOther) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

func (o DocumentBreakdownVisualAuthenticityBreakdownOther) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentBreakdownVisualAuthenticityBreakdownOther) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableDocumentBreakdownVisualAuthenticityBreakdownOther struct {
	value *DocumentBreakdownVisualAuthenticityBreakdownOther
	isSet bool
}

func (v NullableDocumentBreakdownVisualAuthenticityBreakdownOther) Get() *DocumentBreakdownVisualAuthenticityBreakdownOther {
	return v.value
}

func (v *NullableDocumentBreakdownVisualAuthenticityBreakdownOther) Set(val *DocumentBreakdownVisualAuthenticityBreakdownOther) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentBreakdownVisualAuthenticityBreakdownOther) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentBreakdownVisualAuthenticityBreakdownOther) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentBreakdownVisualAuthenticityBreakdownOther(val *DocumentBreakdownVisualAuthenticityBreakdownOther) *NullableDocumentBreakdownVisualAuthenticityBreakdownOther {
	return &NullableDocumentBreakdownVisualAuthenticityBreakdownOther{value: val, isSet: true}
}

func (v NullableDocumentBreakdownVisualAuthenticityBreakdownOther) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentBreakdownVisualAuthenticityBreakdownOther) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
