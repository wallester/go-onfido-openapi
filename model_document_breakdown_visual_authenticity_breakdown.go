/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the DocumentBreakdownVisualAuthenticityBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentBreakdownVisualAuthenticityBreakdown{}

// DocumentBreakdownVisualAuthenticityBreakdown struct for DocumentBreakdownVisualAuthenticityBreakdown
type DocumentBreakdownVisualAuthenticityBreakdown struct {
	Fonts                   *DocumentBreakdownVisualAuthenticityBreakdownFonts                   `json:"fonts,omitempty"`
	PictureFaceIntegrity    *DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity    `json:"picture_face_integrity,omitempty"`
	Template                *DocumentBreakdownVisualAuthenticityBreakdownTemplate                `json:"template,omitempty"`
	SecurityFeatures        *DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures        `json:"security_features,omitempty"`
	OriginalDocumentPresent *DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent `json:"original_document_present,omitempty"`
	DigitalTampering        *DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering        `json:"digital_tampering,omitempty"`
	Other                   *DocumentBreakdownVisualAuthenticityBreakdownOther                   `json:"other,omitempty"`
	FaceDetection           *DocumentBreakdownVisualAuthenticityBreakdownFaceDetection           `json:"face_detection,omitempty"`
}

// NewDocumentBreakdownVisualAuthenticityBreakdown instantiates a new DocumentBreakdownVisualAuthenticityBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentBreakdownVisualAuthenticityBreakdown() *DocumentBreakdownVisualAuthenticityBreakdown {
	this := DocumentBreakdownVisualAuthenticityBreakdown{}
	return &this
}

// NewDocumentBreakdownVisualAuthenticityBreakdownWithDefaults instantiates a new DocumentBreakdownVisualAuthenticityBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentBreakdownVisualAuthenticityBreakdownWithDefaults() *DocumentBreakdownVisualAuthenticityBreakdown {
	this := DocumentBreakdownVisualAuthenticityBreakdown{}
	return &this
}

// GetFonts returns the Fonts field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetFonts() DocumentBreakdownVisualAuthenticityBreakdownFonts {
	if o == nil || IsNil(o.Fonts) {
		var ret DocumentBreakdownVisualAuthenticityBreakdownFonts
		return ret
	}
	return *o.Fonts
}

// GetFontsOk returns a tuple with the Fonts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetFontsOk() (*DocumentBreakdownVisualAuthenticityBreakdownFonts, bool) {
	if o == nil || IsNil(o.Fonts) {
		return nil, false
	}
	return o.Fonts, true
}

// HasFonts returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) HasFonts() bool {
	if o != nil && !IsNil(o.Fonts) {
		return true
	}

	return false
}

// SetFonts gets a reference to the given DocumentBreakdownVisualAuthenticityBreakdownFonts and assigns it to the Fonts field.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) SetFonts(v DocumentBreakdownVisualAuthenticityBreakdownFonts) {
	o.Fonts = &v
}

// GetPictureFaceIntegrity returns the PictureFaceIntegrity field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetPictureFaceIntegrity() DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity {
	if o == nil || IsNil(o.PictureFaceIntegrity) {
		var ret DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity
		return ret
	}
	return *o.PictureFaceIntegrity
}

// GetPictureFaceIntegrityOk returns a tuple with the PictureFaceIntegrity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetPictureFaceIntegrityOk() (*DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity, bool) {
	if o == nil || IsNil(o.PictureFaceIntegrity) {
		return nil, false
	}
	return o.PictureFaceIntegrity, true
}

// HasPictureFaceIntegrity returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) HasPictureFaceIntegrity() bool {
	if o != nil && !IsNil(o.PictureFaceIntegrity) {
		return true
	}

	return false
}

// SetPictureFaceIntegrity gets a reference to the given DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity and assigns it to the PictureFaceIntegrity field.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) SetPictureFaceIntegrity(v DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity) {
	o.PictureFaceIntegrity = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetTemplate() DocumentBreakdownVisualAuthenticityBreakdownTemplate {
	if o == nil || IsNil(o.Template) {
		var ret DocumentBreakdownVisualAuthenticityBreakdownTemplate
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetTemplateOk() (*DocumentBreakdownVisualAuthenticityBreakdownTemplate, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given DocumentBreakdownVisualAuthenticityBreakdownTemplate and assigns it to the Template field.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) SetTemplate(v DocumentBreakdownVisualAuthenticityBreakdownTemplate) {
	o.Template = &v
}

// GetSecurityFeatures returns the SecurityFeatures field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetSecurityFeatures() DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures {
	if o == nil || IsNil(o.SecurityFeatures) {
		var ret DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures
		return ret
	}
	return *o.SecurityFeatures
}

// GetSecurityFeaturesOk returns a tuple with the SecurityFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetSecurityFeaturesOk() (*DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures, bool) {
	if o == nil || IsNil(o.SecurityFeatures) {
		return nil, false
	}
	return o.SecurityFeatures, true
}

// HasSecurityFeatures returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) HasSecurityFeatures() bool {
	if o != nil && !IsNil(o.SecurityFeatures) {
		return true
	}

	return false
}

// SetSecurityFeatures gets a reference to the given DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures and assigns it to the SecurityFeatures field.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) SetSecurityFeatures(v DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures) {
	o.SecurityFeatures = &v
}

// GetOriginalDocumentPresent returns the OriginalDocumentPresent field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetOriginalDocumentPresent() DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent {
	if o == nil || IsNil(o.OriginalDocumentPresent) {
		var ret DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent
		return ret
	}
	return *o.OriginalDocumentPresent
}

// GetOriginalDocumentPresentOk returns a tuple with the OriginalDocumentPresent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetOriginalDocumentPresentOk() (*DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent, bool) {
	if o == nil || IsNil(o.OriginalDocumentPresent) {
		return nil, false
	}
	return o.OriginalDocumentPresent, true
}

// HasOriginalDocumentPresent returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) HasOriginalDocumentPresent() bool {
	if o != nil && !IsNil(o.OriginalDocumentPresent) {
		return true
	}

	return false
}

// SetOriginalDocumentPresent gets a reference to the given DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent and assigns it to the OriginalDocumentPresent field.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) SetOriginalDocumentPresent(v DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent) {
	o.OriginalDocumentPresent = &v
}

// GetDigitalTampering returns the DigitalTampering field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetDigitalTampering() DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering {
	if o == nil || IsNil(o.DigitalTampering) {
		var ret DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering
		return ret
	}
	return *o.DigitalTampering
}

// GetDigitalTamperingOk returns a tuple with the DigitalTampering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetDigitalTamperingOk() (*DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering, bool) {
	if o == nil || IsNil(o.DigitalTampering) {
		return nil, false
	}
	return o.DigitalTampering, true
}

// HasDigitalTampering returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) HasDigitalTampering() bool {
	if o != nil && !IsNil(o.DigitalTampering) {
		return true
	}

	return false
}

// SetDigitalTampering gets a reference to the given DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering and assigns it to the DigitalTampering field.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) SetDigitalTampering(v DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering) {
	o.DigitalTampering = &v
}

// GetOther returns the Other field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetOther() DocumentBreakdownVisualAuthenticityBreakdownOther {
	if o == nil || IsNil(o.Other) {
		var ret DocumentBreakdownVisualAuthenticityBreakdownOther
		return ret
	}
	return *o.Other
}

// GetOtherOk returns a tuple with the Other field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetOtherOk() (*DocumentBreakdownVisualAuthenticityBreakdownOther, bool) {
	if o == nil || IsNil(o.Other) {
		return nil, false
	}
	return o.Other, true
}

// HasOther returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) HasOther() bool {
	if o != nil && !IsNil(o.Other) {
		return true
	}

	return false
}

// SetOther gets a reference to the given DocumentBreakdownVisualAuthenticityBreakdownOther and assigns it to the Other field.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) SetOther(v DocumentBreakdownVisualAuthenticityBreakdownOther) {
	o.Other = &v
}

// GetFaceDetection returns the FaceDetection field value if set, zero value otherwise.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetFaceDetection() DocumentBreakdownVisualAuthenticityBreakdownFaceDetection {
	if o == nil || IsNil(o.FaceDetection) {
		var ret DocumentBreakdownVisualAuthenticityBreakdownFaceDetection
		return ret
	}
	return *o.FaceDetection
}

// GetFaceDetectionOk returns a tuple with the FaceDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) GetFaceDetectionOk() (*DocumentBreakdownVisualAuthenticityBreakdownFaceDetection, bool) {
	if o == nil || IsNil(o.FaceDetection) {
		return nil, false
	}
	return o.FaceDetection, true
}

// HasFaceDetection returns a boolean if a field has been set.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) HasFaceDetection() bool {
	if o != nil && !IsNil(o.FaceDetection) {
		return true
	}

	return false
}

// SetFaceDetection gets a reference to the given DocumentBreakdownVisualAuthenticityBreakdownFaceDetection and assigns it to the FaceDetection field.
func (o *DocumentBreakdownVisualAuthenticityBreakdown) SetFaceDetection(v DocumentBreakdownVisualAuthenticityBreakdownFaceDetection) {
	o.FaceDetection = &v
}

func (o DocumentBreakdownVisualAuthenticityBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentBreakdownVisualAuthenticityBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fonts) {
		toSerialize["fonts"] = o.Fonts
	}
	if !IsNil(o.PictureFaceIntegrity) {
		toSerialize["picture_face_integrity"] = o.PictureFaceIntegrity
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.SecurityFeatures) {
		toSerialize["security_features"] = o.SecurityFeatures
	}
	if !IsNil(o.OriginalDocumentPresent) {
		toSerialize["original_document_present"] = o.OriginalDocumentPresent
	}
	if !IsNil(o.DigitalTampering) {
		toSerialize["digital_tampering"] = o.DigitalTampering
	}
	if !IsNil(o.Other) {
		toSerialize["other"] = o.Other
	}
	if !IsNil(o.FaceDetection) {
		toSerialize["face_detection"] = o.FaceDetection
	}
	return toSerialize, nil
}

type NullableDocumentBreakdownVisualAuthenticityBreakdown struct {
	value *DocumentBreakdownVisualAuthenticityBreakdown
	isSet bool
}

func (v NullableDocumentBreakdownVisualAuthenticityBreakdown) Get() *DocumentBreakdownVisualAuthenticityBreakdown {
	return v.value
}

func (v *NullableDocumentBreakdownVisualAuthenticityBreakdown) Set(val *DocumentBreakdownVisualAuthenticityBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentBreakdownVisualAuthenticityBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentBreakdownVisualAuthenticityBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentBreakdownVisualAuthenticityBreakdown(val *DocumentBreakdownVisualAuthenticityBreakdown) *NullableDocumentBreakdownVisualAuthenticityBreakdown {
	return &NullableDocumentBreakdownVisualAuthenticityBreakdown{value: val, isSet: true}
}

func (v NullableDocumentBreakdownVisualAuthenticityBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentBreakdownVisualAuthenticityBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
