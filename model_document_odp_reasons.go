/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the DocumentODPReasons type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentODPReasons{}

// DocumentODPReasons struct for DocumentODPReasons
type DocumentODPReasons struct {
	// When the applicant's document is on a physical screen or device.
	PhotoOfScreen *string `json:"photo_of_screen,omitempty"`
	// When the applicant has used their mobile phone, tablet, or computer to take a photo within the device.
	Screenshot *string `json:"screenshot,omitempty"`
	// When the applicant has previously captured an image of the document, printed it out, and has now taken a photo of this print out to upload.
	DocumentOnPrintedPaper *string `json:"document_on_printed_paper,omitempty"`
	// When the document has clearly been captured using a scanner and there are visible indicators of this
	Scan *string `json:"scan,omitempty"`
}

// NewDocumentODPReasons instantiates a new DocumentODPReasons object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentODPReasons() *DocumentODPReasons {
	this := DocumentODPReasons{}
	return &this
}

// NewDocumentODPReasonsWithDefaults instantiates a new DocumentODPReasons object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentODPReasonsWithDefaults() *DocumentODPReasons {
	this := DocumentODPReasons{}
	return &this
}

// GetPhotoOfScreen returns the PhotoOfScreen field value if set, zero value otherwise.
func (o *DocumentODPReasons) GetPhotoOfScreen() string {
	if o == nil || IsNil(o.PhotoOfScreen) {
		var ret string
		return ret
	}
	return *o.PhotoOfScreen
}

// GetPhotoOfScreenOk returns a tuple with the PhotoOfScreen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentODPReasons) GetPhotoOfScreenOk() (*string, bool) {
	if o == nil || IsNil(o.PhotoOfScreen) {
		return nil, false
	}
	return o.PhotoOfScreen, true
}

// HasPhotoOfScreen returns a boolean if a field has been set.
func (o *DocumentODPReasons) HasPhotoOfScreen() bool {
	if o != nil && !IsNil(o.PhotoOfScreen) {
		return true
	}

	return false
}

// SetPhotoOfScreen gets a reference to the given string and assigns it to the PhotoOfScreen field.
func (o *DocumentODPReasons) SetPhotoOfScreen(v string) {
	o.PhotoOfScreen = &v
}

// GetScreenshot returns the Screenshot field value if set, zero value otherwise.
func (o *DocumentODPReasons) GetScreenshot() string {
	if o == nil || IsNil(o.Screenshot) {
		var ret string
		return ret
	}
	return *o.Screenshot
}

// GetScreenshotOk returns a tuple with the Screenshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentODPReasons) GetScreenshotOk() (*string, bool) {
	if o == nil || IsNil(o.Screenshot) {
		return nil, false
	}
	return o.Screenshot, true
}

// HasScreenshot returns a boolean if a field has been set.
func (o *DocumentODPReasons) HasScreenshot() bool {
	if o != nil && !IsNil(o.Screenshot) {
		return true
	}

	return false
}

// SetScreenshot gets a reference to the given string and assigns it to the Screenshot field.
func (o *DocumentODPReasons) SetScreenshot(v string) {
	o.Screenshot = &v
}

// GetDocumentOnPrintedPaper returns the DocumentOnPrintedPaper field value if set, zero value otherwise.
func (o *DocumentODPReasons) GetDocumentOnPrintedPaper() string {
	if o == nil || IsNil(o.DocumentOnPrintedPaper) {
		var ret string
		return ret
	}
	return *o.DocumentOnPrintedPaper
}

// GetDocumentOnPrintedPaperOk returns a tuple with the DocumentOnPrintedPaper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentODPReasons) GetDocumentOnPrintedPaperOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentOnPrintedPaper) {
		return nil, false
	}
	return o.DocumentOnPrintedPaper, true
}

// HasDocumentOnPrintedPaper returns a boolean if a field has been set.
func (o *DocumentODPReasons) HasDocumentOnPrintedPaper() bool {
	if o != nil && !IsNil(o.DocumentOnPrintedPaper) {
		return true
	}

	return false
}

// SetDocumentOnPrintedPaper gets a reference to the given string and assigns it to the DocumentOnPrintedPaper field.
func (o *DocumentODPReasons) SetDocumentOnPrintedPaper(v string) {
	o.DocumentOnPrintedPaper = &v
}

// GetScan returns the Scan field value if set, zero value otherwise.
func (o *DocumentODPReasons) GetScan() string {
	if o == nil || IsNil(o.Scan) {
		var ret string
		return ret
	}
	return *o.Scan
}

// GetScanOk returns a tuple with the Scan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentODPReasons) GetScanOk() (*string, bool) {
	if o == nil || IsNil(o.Scan) {
		return nil, false
	}
	return o.Scan, true
}

// HasScan returns a boolean if a field has been set.
func (o *DocumentODPReasons) HasScan() bool {
	if o != nil && !IsNil(o.Scan) {
		return true
	}

	return false
}

// SetScan gets a reference to the given string and assigns it to the Scan field.
func (o *DocumentODPReasons) SetScan(v string) {
	o.Scan = &v
}

func (o DocumentODPReasons) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentODPReasons) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PhotoOfScreen) {
		toSerialize["photo_of_screen"] = o.PhotoOfScreen
	}
	if !IsNil(o.Screenshot) {
		toSerialize["screenshot"] = o.Screenshot
	}
	if !IsNil(o.DocumentOnPrintedPaper) {
		toSerialize["document_on_printed_paper"] = o.DocumentOnPrintedPaper
	}
	if !IsNil(o.Scan) {
		toSerialize["scan"] = o.Scan
	}
	return toSerialize, nil
}

type NullableDocumentODPReasons struct {
	value *DocumentODPReasons
	isSet bool
}

func (v NullableDocumentODPReasons) Get() *DocumentODPReasons {
	return v.value
}

func (v *NullableDocumentODPReasons) Set(val *DocumentODPReasons) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentODPReasons) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentODPReasons) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentODPReasons(val *DocumentODPReasons) *NullableDocumentODPReasons {
	return &NullableDocumentODPReasons{value: val, isSet: true}
}

func (v NullableDocumentODPReasons) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentODPReasons) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
