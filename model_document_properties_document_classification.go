/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the DocumentPropertiesDocumentClassification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentPropertiesDocumentClassification{}

// DocumentPropertiesDocumentClassification struct for DocumentPropertiesDocumentClassification
type DocumentPropertiesDocumentClassification struct {
	IssuingCountry *string `json:"issuing_country,omitempty"`
	DocumentType   *string `json:"document_type,omitempty"`
	IssuingState   *string `json:"issuing_state,omitempty"`
}

// NewDocumentPropertiesDocumentClassification instantiates a new DocumentPropertiesDocumentClassification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentPropertiesDocumentClassification() *DocumentPropertiesDocumentClassification {
	this := DocumentPropertiesDocumentClassification{}
	return &this
}

// NewDocumentPropertiesDocumentClassificationWithDefaults instantiates a new DocumentPropertiesDocumentClassification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentPropertiesDocumentClassificationWithDefaults() *DocumentPropertiesDocumentClassification {
	this := DocumentPropertiesDocumentClassification{}
	return &this
}

// GetIssuingCountry returns the IssuingCountry field value if set, zero value otherwise.
func (o *DocumentPropertiesDocumentClassification) GetIssuingCountry() string {
	if o == nil || IsNil(o.IssuingCountry) {
		var ret string
		return ret
	}
	return *o.IssuingCountry
}

// GetIssuingCountryOk returns a tuple with the IssuingCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentPropertiesDocumentClassification) GetIssuingCountryOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingCountry) {
		return nil, false
	}
	return o.IssuingCountry, true
}

// HasIssuingCountry returns a boolean if a field has been set.
func (o *DocumentPropertiesDocumentClassification) HasIssuingCountry() bool {
	if o != nil && !IsNil(o.IssuingCountry) {
		return true
	}

	return false
}

// SetIssuingCountry gets a reference to the given string and assigns it to the IssuingCountry field.
func (o *DocumentPropertiesDocumentClassification) SetIssuingCountry(v string) {
	o.IssuingCountry = &v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *DocumentPropertiesDocumentClassification) GetDocumentType() string {
	if o == nil || IsNil(o.DocumentType) {
		var ret string
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentPropertiesDocumentClassification) GetDocumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentType) {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *DocumentPropertiesDocumentClassification) HasDocumentType() bool {
	if o != nil && !IsNil(o.DocumentType) {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given string and assigns it to the DocumentType field.
func (o *DocumentPropertiesDocumentClassification) SetDocumentType(v string) {
	o.DocumentType = &v
}

// GetIssuingState returns the IssuingState field value if set, zero value otherwise.
func (o *DocumentPropertiesDocumentClassification) GetIssuingState() string {
	if o == nil || IsNil(o.IssuingState) {
		var ret string
		return ret
	}
	return *o.IssuingState
}

// GetIssuingStateOk returns a tuple with the IssuingState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentPropertiesDocumentClassification) GetIssuingStateOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingState) {
		return nil, false
	}
	return o.IssuingState, true
}

// HasIssuingState returns a boolean if a field has been set.
func (o *DocumentPropertiesDocumentClassification) HasIssuingState() bool {
	if o != nil && !IsNil(o.IssuingState) {
		return true
	}

	return false
}

// SetIssuingState gets a reference to the given string and assigns it to the IssuingState field.
func (o *DocumentPropertiesDocumentClassification) SetIssuingState(v string) {
	o.IssuingState = &v
}

func (o DocumentPropertiesDocumentClassification) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentPropertiesDocumentClassification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssuingCountry) {
		toSerialize["issuing_country"] = o.IssuingCountry
	}
	if !IsNil(o.DocumentType) {
		toSerialize["document_type"] = o.DocumentType
	}
	if !IsNil(o.IssuingState) {
		toSerialize["issuing_state"] = o.IssuingState
	}
	return toSerialize, nil
}

type NullableDocumentPropertiesDocumentClassification struct {
	value *DocumentPropertiesDocumentClassification
	isSet bool
}

func (v NullableDocumentPropertiesDocumentClassification) Get() *DocumentPropertiesDocumentClassification {
	return v.value
}

func (v *NullableDocumentPropertiesDocumentClassification) Set(val *DocumentPropertiesDocumentClassification) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentPropertiesDocumentClassification) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentPropertiesDocumentClassification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentPropertiesDocumentClassification(val *DocumentPropertiesDocumentClassification) *NullableDocumentPropertiesDocumentClassification {
	return &NullableDocumentPropertiesDocumentClassification{value: val, isSet: true}
}

func (v NullableDocumentPropertiesDocumentClassification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentPropertiesDocumentClassification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
