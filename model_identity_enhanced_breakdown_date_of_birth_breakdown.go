/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the IdentityEnhancedBreakdownDateOfBirthBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityEnhancedBreakdownDateOfBirthBreakdown{}

// IdentityEnhancedBreakdownDateOfBirthBreakdown struct for IdentityEnhancedBreakdownDateOfBirthBreakdown
type IdentityEnhancedBreakdownDateOfBirthBreakdown struct {
	CreditAgencies *IdentityEnhancedBreakdownDateOfBirthBreakdownCreditAgencies `json:"credit_agencies,omitempty"`
	VotingRegister *IdentityEnhancedBreakdownDateOfBirthBreakdownVotingRegister `json:"voting_register,omitempty"`
}

// NewIdentityEnhancedBreakdownDateOfBirthBreakdown instantiates a new IdentityEnhancedBreakdownDateOfBirthBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEnhancedBreakdownDateOfBirthBreakdown() *IdentityEnhancedBreakdownDateOfBirthBreakdown {
	this := IdentityEnhancedBreakdownDateOfBirthBreakdown{}
	return &this
}

// NewIdentityEnhancedBreakdownDateOfBirthBreakdownWithDefaults instantiates a new IdentityEnhancedBreakdownDateOfBirthBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEnhancedBreakdownDateOfBirthBreakdownWithDefaults() *IdentityEnhancedBreakdownDateOfBirthBreakdown {
	this := IdentityEnhancedBreakdownDateOfBirthBreakdown{}
	return &this
}

// GetCreditAgencies returns the CreditAgencies field value if set, zero value otherwise.
func (o *IdentityEnhancedBreakdownDateOfBirthBreakdown) GetCreditAgencies() IdentityEnhancedBreakdownDateOfBirthBreakdownCreditAgencies {
	if o == nil || IsNil(o.CreditAgencies) {
		var ret IdentityEnhancedBreakdownDateOfBirthBreakdownCreditAgencies
		return ret
	}
	return *o.CreditAgencies
}

// GetCreditAgenciesOk returns a tuple with the CreditAgencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedBreakdownDateOfBirthBreakdown) GetCreditAgenciesOk() (*IdentityEnhancedBreakdownDateOfBirthBreakdownCreditAgencies, bool) {
	if o == nil || IsNil(o.CreditAgencies) {
		return nil, false
	}
	return o.CreditAgencies, true
}

// HasCreditAgencies returns a boolean if a field has been set.
func (o *IdentityEnhancedBreakdownDateOfBirthBreakdown) HasCreditAgencies() bool {
	if o != nil && !IsNil(o.CreditAgencies) {
		return true
	}

	return false
}

// SetCreditAgencies gets a reference to the given IdentityEnhancedBreakdownDateOfBirthBreakdownCreditAgencies and assigns it to the CreditAgencies field.
func (o *IdentityEnhancedBreakdownDateOfBirthBreakdown) SetCreditAgencies(v IdentityEnhancedBreakdownDateOfBirthBreakdownCreditAgencies) {
	o.CreditAgencies = &v
}

// GetVotingRegister returns the VotingRegister field value if set, zero value otherwise.
func (o *IdentityEnhancedBreakdownDateOfBirthBreakdown) GetVotingRegister() IdentityEnhancedBreakdownDateOfBirthBreakdownVotingRegister {
	if o == nil || IsNil(o.VotingRegister) {
		var ret IdentityEnhancedBreakdownDateOfBirthBreakdownVotingRegister
		return ret
	}
	return *o.VotingRegister
}

// GetVotingRegisterOk returns a tuple with the VotingRegister field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedBreakdownDateOfBirthBreakdown) GetVotingRegisterOk() (*IdentityEnhancedBreakdownDateOfBirthBreakdownVotingRegister, bool) {
	if o == nil || IsNil(o.VotingRegister) {
		return nil, false
	}
	return o.VotingRegister, true
}

// HasVotingRegister returns a boolean if a field has been set.
func (o *IdentityEnhancedBreakdownDateOfBirthBreakdown) HasVotingRegister() bool {
	if o != nil && !IsNil(o.VotingRegister) {
		return true
	}

	return false
}

// SetVotingRegister gets a reference to the given IdentityEnhancedBreakdownDateOfBirthBreakdownVotingRegister and assigns it to the VotingRegister field.
func (o *IdentityEnhancedBreakdownDateOfBirthBreakdown) SetVotingRegister(v IdentityEnhancedBreakdownDateOfBirthBreakdownVotingRegister) {
	o.VotingRegister = &v
}

func (o IdentityEnhancedBreakdownDateOfBirthBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityEnhancedBreakdownDateOfBirthBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreditAgencies) {
		toSerialize["credit_agencies"] = o.CreditAgencies
	}
	if !IsNil(o.VotingRegister) {
		toSerialize["voting_register"] = o.VotingRegister
	}
	return toSerialize, nil
}

type NullableIdentityEnhancedBreakdownDateOfBirthBreakdown struct {
	value *IdentityEnhancedBreakdownDateOfBirthBreakdown
	isSet bool
}

func (v NullableIdentityEnhancedBreakdownDateOfBirthBreakdown) Get() *IdentityEnhancedBreakdownDateOfBirthBreakdown {
	return v.value
}

func (v *NullableIdentityEnhancedBreakdownDateOfBirthBreakdown) Set(val *IdentityEnhancedBreakdownDateOfBirthBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEnhancedBreakdownDateOfBirthBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEnhancedBreakdownDateOfBirthBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEnhancedBreakdownDateOfBirthBreakdown(val *IdentityEnhancedBreakdownDateOfBirthBreakdown) *NullableIdentityEnhancedBreakdownDateOfBirthBreakdown {
	return &NullableIdentityEnhancedBreakdownDateOfBirthBreakdown{value: val, isSet: true}
}

func (v NullableIdentityEnhancedBreakdownDateOfBirthBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEnhancedBreakdownDateOfBirthBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
