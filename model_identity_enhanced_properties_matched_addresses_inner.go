/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the IdentityEnhancedPropertiesMatchedAddressesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityEnhancedPropertiesMatchedAddressesInner{}

// IdentityEnhancedPropertiesMatchedAddressesInner struct for IdentityEnhancedPropertiesMatchedAddressesInner
type IdentityEnhancedPropertiesMatchedAddressesInner struct {
	// The address number.
	Id *float32 `json:"id,omitempty"`
	// Sources which contain matched addresses.
	MatchTypes []string `json:"match_types,omitempty"`
}

// NewIdentityEnhancedPropertiesMatchedAddressesInner instantiates a new IdentityEnhancedPropertiesMatchedAddressesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEnhancedPropertiesMatchedAddressesInner() *IdentityEnhancedPropertiesMatchedAddressesInner {
	this := IdentityEnhancedPropertiesMatchedAddressesInner{}
	return &this
}

// NewIdentityEnhancedPropertiesMatchedAddressesInnerWithDefaults instantiates a new IdentityEnhancedPropertiesMatchedAddressesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEnhancedPropertiesMatchedAddressesInnerWithDefaults() *IdentityEnhancedPropertiesMatchedAddressesInner {
	this := IdentityEnhancedPropertiesMatchedAddressesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityEnhancedPropertiesMatchedAddressesInner) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedPropertiesMatchedAddressesInner) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityEnhancedPropertiesMatchedAddressesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *IdentityEnhancedPropertiesMatchedAddressesInner) SetId(v float32) {
	o.Id = &v
}

// GetMatchTypes returns the MatchTypes field value if set, zero value otherwise.
func (o *IdentityEnhancedPropertiesMatchedAddressesInner) GetMatchTypes() []string {
	if o == nil || IsNil(o.MatchTypes) {
		var ret []string
		return ret
	}
	return o.MatchTypes
}

// GetMatchTypesOk returns a tuple with the MatchTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedPropertiesMatchedAddressesInner) GetMatchTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.MatchTypes) {
		return nil, false
	}
	return o.MatchTypes, true
}

// HasMatchTypes returns a boolean if a field has been set.
func (o *IdentityEnhancedPropertiesMatchedAddressesInner) HasMatchTypes() bool {
	if o != nil && !IsNil(o.MatchTypes) {
		return true
	}

	return false
}

// SetMatchTypes gets a reference to the given []string and assigns it to the MatchTypes field.
func (o *IdentityEnhancedPropertiesMatchedAddressesInner) SetMatchTypes(v []string) {
	o.MatchTypes = v
}

func (o IdentityEnhancedPropertiesMatchedAddressesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityEnhancedPropertiesMatchedAddressesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MatchTypes) {
		toSerialize["match_types"] = o.MatchTypes
	}
	return toSerialize, nil
}

type NullableIdentityEnhancedPropertiesMatchedAddressesInner struct {
	value *IdentityEnhancedPropertiesMatchedAddressesInner
	isSet bool
}

func (v NullableIdentityEnhancedPropertiesMatchedAddressesInner) Get() *IdentityEnhancedPropertiesMatchedAddressesInner {
	return v.value
}

func (v *NullableIdentityEnhancedPropertiesMatchedAddressesInner) Set(val *IdentityEnhancedPropertiesMatchedAddressesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEnhancedPropertiesMatchedAddressesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEnhancedPropertiesMatchedAddressesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEnhancedPropertiesMatchedAddressesInner(val *IdentityEnhancedPropertiesMatchedAddressesInner) *NullableIdentityEnhancedPropertiesMatchedAddressesInner {
	return &NullableIdentityEnhancedPropertiesMatchedAddressesInner{value: val, isSet: true}
}

func (v NullableIdentityEnhancedPropertiesMatchedAddressesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEnhancedPropertiesMatchedAddressesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
