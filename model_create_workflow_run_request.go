/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateWorkflowRunRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWorkflowRunRequest{}

// CreateWorkflowRunRequest struct for CreateWorkflowRunRequest
type CreateWorkflowRunRequest struct {
	// The unique identifier for the Workflow.
	WorkflowId string `json:"workflow_id"`
	// The unique identifier for the Applicant.
	ApplicantId string `json:"applicant_id"`
	// Optional object with custom input data to be used in the Workflow Run.
	CustomData map[string]interface{} `json:"custom_data,omitempty"`
	// Tags or labels to assign to the workflow run.
	Tags []string `json:"tags,omitempty"`
	// Optional object for the configuration of the Workflow Run link.
	Link map[string]interface{} `json:"link,omitempty"`
}

type _CreateWorkflowRunRequest CreateWorkflowRunRequest

// NewCreateWorkflowRunRequest instantiates a new CreateWorkflowRunRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWorkflowRunRequest(workflowId string, applicantId string) *CreateWorkflowRunRequest {
	this := CreateWorkflowRunRequest{}
	this.WorkflowId = workflowId
	this.ApplicantId = applicantId
	return &this
}

// NewCreateWorkflowRunRequestWithDefaults instantiates a new CreateWorkflowRunRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWorkflowRunRequestWithDefaults() *CreateWorkflowRunRequest {
	this := CreateWorkflowRunRequest{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value
func (o *CreateWorkflowRunRequest) GetWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *CreateWorkflowRunRequest) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *CreateWorkflowRunRequest) SetWorkflowId(v string) {
	o.WorkflowId = v
}

// GetApplicantId returns the ApplicantId field value
func (o *CreateWorkflowRunRequest) GetApplicantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicantId
}

// GetApplicantIdOk returns a tuple with the ApplicantId field value
// and a boolean to check if the value has been set.
func (o *CreateWorkflowRunRequest) GetApplicantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicantId, true
}

// SetApplicantId sets field value
func (o *CreateWorkflowRunRequest) SetApplicantId(v string) {
	o.ApplicantId = v
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *CreateWorkflowRunRequest) GetCustomData() map[string]interface{} {
	if o == nil || IsNil(o.CustomData) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkflowRunRequest) GetCustomDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomData) {
		return map[string]interface{}{}, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *CreateWorkflowRunRequest) HasCustomData() bool {
	if o != nil && !IsNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given map[string]interface{} and assigns it to the CustomData field.
func (o *CreateWorkflowRunRequest) SetCustomData(v map[string]interface{}) {
	o.CustomData = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateWorkflowRunRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkflowRunRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateWorkflowRunRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CreateWorkflowRunRequest) SetTags(v []string) {
	o.Tags = v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *CreateWorkflowRunRequest) GetLink() map[string]interface{} {
	if o == nil || IsNil(o.Link) {
		var ret map[string]interface{}
		return ret
	}
	return o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkflowRunRequest) GetLinkOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Link) {
		return map[string]interface{}{}, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *CreateWorkflowRunRequest) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given map[string]interface{} and assigns it to the Link field.
func (o *CreateWorkflowRunRequest) SetLink(v map[string]interface{}) {
	o.Link = v
}

func (o CreateWorkflowRunRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWorkflowRunRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workflow_id"] = o.WorkflowId
	toSerialize["applicant_id"] = o.ApplicantId
	if !IsNil(o.CustomData) {
		toSerialize["custom_data"] = o.CustomData
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	return toSerialize, nil
}

func (o *CreateWorkflowRunRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"workflow_id",
		"applicant_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateWorkflowRunRequest := _CreateWorkflowRunRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateWorkflowRunRequest)

	if err != nil {
		return err
	}

	*o = CreateWorkflowRunRequest(varCreateWorkflowRunRequest)

	return err
}

type NullableCreateWorkflowRunRequest struct {
	value *CreateWorkflowRunRequest
	isSet bool
}

func (v NullableCreateWorkflowRunRequest) Get() *CreateWorkflowRunRequest {
	return v.value
}

func (v *NullableCreateWorkflowRunRequest) Set(val *CreateWorkflowRunRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWorkflowRunRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWorkflowRunRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWorkflowRunRequest(val *CreateWorkflowRunRequest) *NullableCreateWorkflowRunRequest {
	return &NullableCreateWorkflowRunRequest{value: val, isSet: true}
}

func (v NullableCreateWorkflowRunRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWorkflowRunRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
