/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the IdentityEnhancedBreakdownSources type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityEnhancedBreakdownSources{}

// IdentityEnhancedBreakdownSources Asserts if any sources that an applicant's details have been verified against have produced a match.
type IdentityEnhancedBreakdownSources struct {
	Result    *string                                    `json:"result,omitempty"`
	Breakdown *IdentityEnhancedBreakdownSourcesBreakdown `json:"breakdown,omitempty"`
}

// NewIdentityEnhancedBreakdownSources instantiates a new IdentityEnhancedBreakdownSources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEnhancedBreakdownSources() *IdentityEnhancedBreakdownSources {
	this := IdentityEnhancedBreakdownSources{}
	return &this
}

// NewIdentityEnhancedBreakdownSourcesWithDefaults instantiates a new IdentityEnhancedBreakdownSources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEnhancedBreakdownSourcesWithDefaults() *IdentityEnhancedBreakdownSources {
	this := IdentityEnhancedBreakdownSources{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *IdentityEnhancedBreakdownSources) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedBreakdownSources) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *IdentityEnhancedBreakdownSources) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *IdentityEnhancedBreakdownSources) SetResult(v string) {
	o.Result = &v
}

// GetBreakdown returns the Breakdown field value if set, zero value otherwise.
func (o *IdentityEnhancedBreakdownSources) GetBreakdown() IdentityEnhancedBreakdownSourcesBreakdown {
	if o == nil || IsNil(o.Breakdown) {
		var ret IdentityEnhancedBreakdownSourcesBreakdown
		return ret
	}
	return *o.Breakdown
}

// GetBreakdownOk returns a tuple with the Breakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedBreakdownSources) GetBreakdownOk() (*IdentityEnhancedBreakdownSourcesBreakdown, bool) {
	if o == nil || IsNil(o.Breakdown) {
		return nil, false
	}
	return o.Breakdown, true
}

// HasBreakdown returns a boolean if a field has been set.
func (o *IdentityEnhancedBreakdownSources) HasBreakdown() bool {
	if o != nil && !IsNil(o.Breakdown) {
		return true
	}

	return false
}

// SetBreakdown gets a reference to the given IdentityEnhancedBreakdownSourcesBreakdown and assigns it to the Breakdown field.
func (o *IdentityEnhancedBreakdownSources) SetBreakdown(v IdentityEnhancedBreakdownSourcesBreakdown) {
	o.Breakdown = &v
}

func (o IdentityEnhancedBreakdownSources) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityEnhancedBreakdownSources) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Breakdown) {
		toSerialize["breakdown"] = o.Breakdown
	}
	return toSerialize, nil
}

type NullableIdentityEnhancedBreakdownSources struct {
	value *IdentityEnhancedBreakdownSources
	isSet bool
}

func (v NullableIdentityEnhancedBreakdownSources) Get() *IdentityEnhancedBreakdownSources {
	return v.value
}

func (v *NullableIdentityEnhancedBreakdownSources) Set(val *IdentityEnhancedBreakdownSources) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEnhancedBreakdownSources) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEnhancedBreakdownSources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEnhancedBreakdownSources(val *IdentityEnhancedBreakdownSources) *NullableIdentityEnhancedBreakdownSources {
	return &NullableIdentityEnhancedBreakdownSources{value: val, isSet: true}
}

func (v NullableIdentityEnhancedBreakdownSources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEnhancedBreakdownSources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
