/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the DocumentBreakdownAgeValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentBreakdownAgeValidation{}

// DocumentBreakdownAgeValidation Asserts whether the age calculated from the documentâ€™s date of birth data point is greater than or equal to the minimum accepted age.
type DocumentBreakdownAgeValidation struct {
	Result    *string                                  `json:"result,omitempty"`
	Breakdown *DocumentBreakdownAgeValidationBreakdown `json:"breakdown,omitempty"`
}

// NewDocumentBreakdownAgeValidation instantiates a new DocumentBreakdownAgeValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentBreakdownAgeValidation() *DocumentBreakdownAgeValidation {
	this := DocumentBreakdownAgeValidation{}
	return &this
}

// NewDocumentBreakdownAgeValidationWithDefaults instantiates a new DocumentBreakdownAgeValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentBreakdownAgeValidationWithDefaults() *DocumentBreakdownAgeValidation {
	this := DocumentBreakdownAgeValidation{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *DocumentBreakdownAgeValidation) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownAgeValidation) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *DocumentBreakdownAgeValidation) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *DocumentBreakdownAgeValidation) SetResult(v string) {
	o.Result = &v
}

// GetBreakdown returns the Breakdown field value if set, zero value otherwise.
func (o *DocumentBreakdownAgeValidation) GetBreakdown() DocumentBreakdownAgeValidationBreakdown {
	if o == nil || IsNil(o.Breakdown) {
		var ret DocumentBreakdownAgeValidationBreakdown
		return ret
	}
	return *o.Breakdown
}

// GetBreakdownOk returns a tuple with the Breakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentBreakdownAgeValidation) GetBreakdownOk() (*DocumentBreakdownAgeValidationBreakdown, bool) {
	if o == nil || IsNil(o.Breakdown) {
		return nil, false
	}
	return o.Breakdown, true
}

// HasBreakdown returns a boolean if a field has been set.
func (o *DocumentBreakdownAgeValidation) HasBreakdown() bool {
	if o != nil && !IsNil(o.Breakdown) {
		return true
	}

	return false
}

// SetBreakdown gets a reference to the given DocumentBreakdownAgeValidationBreakdown and assigns it to the Breakdown field.
func (o *DocumentBreakdownAgeValidation) SetBreakdown(v DocumentBreakdownAgeValidationBreakdown) {
	o.Breakdown = &v
}

func (o DocumentBreakdownAgeValidation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentBreakdownAgeValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Breakdown) {
		toSerialize["breakdown"] = o.Breakdown
	}
	return toSerialize, nil
}

type NullableDocumentBreakdownAgeValidation struct {
	value *DocumentBreakdownAgeValidation
	isSet bool
}

func (v NullableDocumentBreakdownAgeValidation) Get() *DocumentBreakdownAgeValidation {
	return v.value
}

func (v *NullableDocumentBreakdownAgeValidation) Set(val *DocumentBreakdownAgeValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentBreakdownAgeValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentBreakdownAgeValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentBreakdownAgeValidation(val *DocumentBreakdownAgeValidation) *NullableDocumentBreakdownAgeValidation {
	return &NullableDocumentBreakdownAgeValidation{value: val, isSet: true}
}

func (v NullableDocumentBreakdownAgeValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentBreakdownAgeValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
