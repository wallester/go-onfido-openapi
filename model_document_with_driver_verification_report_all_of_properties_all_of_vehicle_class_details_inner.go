/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner{}

// DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner struct for DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner
type DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner struct {
	// Vehicle class/category
	Category *string `json:"category,omitempty"`
	// Special conditions driver must meet
	Codes *string `json:"codes,omitempty"`
	// Category obtainment date
	ObtainmentDate *string `json:"obtainment_date,omitempty"`
	// Category expiry date
	ExpiryDate *string `json:"expiry_date,omitempty"`
}

// NewDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner instantiates a new DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner() *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner {
	this := DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner{}
	return &this
}

// NewDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInnerWithDefaults instantiates a new DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInnerWithDefaults() *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner {
	this := DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) SetCategory(v string) {
	o.Category = &v
}

// GetCodes returns the Codes field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) GetCodes() string {
	if o == nil || IsNil(o.Codes) {
		var ret string
		return ret
	}
	return *o.Codes
}

// GetCodesOk returns a tuple with the Codes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) GetCodesOk() (*string, bool) {
	if o == nil || IsNil(o.Codes) {
		return nil, false
	}
	return o.Codes, true
}

// HasCodes returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) HasCodes() bool {
	if o != nil && !IsNil(o.Codes) {
		return true
	}

	return false
}

// SetCodes gets a reference to the given string and assigns it to the Codes field.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) SetCodes(v string) {
	o.Codes = &v
}

// GetObtainmentDate returns the ObtainmentDate field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) GetObtainmentDate() string {
	if o == nil || IsNil(o.ObtainmentDate) {
		var ret string
		return ret
	}
	return *o.ObtainmentDate
}

// GetObtainmentDateOk returns a tuple with the ObtainmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) GetObtainmentDateOk() (*string, bool) {
	if o == nil || IsNil(o.ObtainmentDate) {
		return nil, false
	}
	return o.ObtainmentDate, true
}

// HasObtainmentDate returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) HasObtainmentDate() bool {
	if o != nil && !IsNil(o.ObtainmentDate) {
		return true
	}

	return false
}

// SetObtainmentDate gets a reference to the given string and assigns it to the ObtainmentDate field.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) SetObtainmentDate(v string) {
	o.ObtainmentDate = &v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) GetExpiryDate() string {
	if o == nil || IsNil(o.ExpiryDate) {
		var ret string
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) GetExpiryDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiryDate) {
		return nil, false
	}
	return o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) HasExpiryDate() bool {
	if o != nil && !IsNil(o.ExpiryDate) {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given string and assigns it to the ExpiryDate field.
func (o *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) SetExpiryDate(v string) {
	o.ExpiryDate = &v
}

func (o DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Codes) {
		toSerialize["codes"] = o.Codes
	}
	if !IsNil(o.ObtainmentDate) {
		toSerialize["obtainment_date"] = o.ObtainmentDate
	}
	if !IsNil(o.ExpiryDate) {
		toSerialize["expiry_date"] = o.ExpiryDate
	}
	return toSerialize, nil
}

type NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner struct {
	value *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner
	isSet bool
}

func (v NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) Get() *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner {
	return v.value
}

func (v *NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) Set(val *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner(val *DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) *NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner {
	return &NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner{value: val, isSet: true}
}

func (v NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
