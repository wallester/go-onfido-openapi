/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the FacialSimilarityPhotoBreakdownFaceComparisonBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FacialSimilarityPhotoBreakdownFaceComparisonBreakdown{}

// FacialSimilarityPhotoBreakdownFaceComparisonBreakdown struct for FacialSimilarityPhotoBreakdownFaceComparisonBreakdown
type FacialSimilarityPhotoBreakdownFaceComparisonBreakdown struct {
	FaceMatch *FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatch `json:"face_match,omitempty"`
}

// NewFacialSimilarityPhotoBreakdownFaceComparisonBreakdown instantiates a new FacialSimilarityPhotoBreakdownFaceComparisonBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFacialSimilarityPhotoBreakdownFaceComparisonBreakdown() *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown {
	this := FacialSimilarityPhotoBreakdownFaceComparisonBreakdown{}
	return &this
}

// NewFacialSimilarityPhotoBreakdownFaceComparisonBreakdownWithDefaults instantiates a new FacialSimilarityPhotoBreakdownFaceComparisonBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFacialSimilarityPhotoBreakdownFaceComparisonBreakdownWithDefaults() *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown {
	this := FacialSimilarityPhotoBreakdownFaceComparisonBreakdown{}
	return &this
}

// GetFaceMatch returns the FaceMatch field value if set, zero value otherwise.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown) GetFaceMatch() FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatch {
	if o == nil || IsNil(o.FaceMatch) {
		var ret FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatch
		return ret
	}
	return *o.FaceMatch
}

// GetFaceMatchOk returns a tuple with the FaceMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown) GetFaceMatchOk() (*FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatch, bool) {
	if o == nil || IsNil(o.FaceMatch) {
		return nil, false
	}
	return o.FaceMatch, true
}

// HasFaceMatch returns a boolean if a field has been set.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown) HasFaceMatch() bool {
	if o != nil && !IsNil(o.FaceMatch) {
		return true
	}

	return false
}

// SetFaceMatch gets a reference to the given FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatch and assigns it to the FaceMatch field.
func (o *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown) SetFaceMatch(v FacialSimilarityPhotoBreakdownFaceComparisonBreakdownFaceMatch) {
	o.FaceMatch = &v
}

func (o FacialSimilarityPhotoBreakdownFaceComparisonBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FacialSimilarityPhotoBreakdownFaceComparisonBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FaceMatch) {
		toSerialize["face_match"] = o.FaceMatch
	}
	return toSerialize, nil
}

type NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown struct {
	value *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown
	isSet bool
}

func (v NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown) Get() *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown {
	return v.value
}

func (v *NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown) Set(val *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown(val *FacialSimilarityPhotoBreakdownFaceComparisonBreakdown) *NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown {
	return &NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown{value: val, isSet: true}
}

func (v NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFacialSimilarityPhotoBreakdownFaceComparisonBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
