/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the IdentityEnhancedProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityEnhancedProperties{}

// IdentityEnhancedProperties struct for IdentityEnhancedProperties
type IdentityEnhancedProperties struct {
	// Returns address number which has been matched.
	MatchedAddress *float32 `json:"matched_address,omitempty"`
	// Returns array of sources which contain matched addresses for the corresponding address number.
	MatchedAddresses []IdentityEnhancedPropertiesMatchedAddressesInner `json:"matched_addresses,omitempty"`
}

// NewIdentityEnhancedProperties instantiates a new IdentityEnhancedProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEnhancedProperties() *IdentityEnhancedProperties {
	this := IdentityEnhancedProperties{}
	return &this
}

// NewIdentityEnhancedPropertiesWithDefaults instantiates a new IdentityEnhancedProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEnhancedPropertiesWithDefaults() *IdentityEnhancedProperties {
	this := IdentityEnhancedProperties{}
	return &this
}

// GetMatchedAddress returns the MatchedAddress field value if set, zero value otherwise.
func (o *IdentityEnhancedProperties) GetMatchedAddress() float32 {
	if o == nil || IsNil(o.MatchedAddress) {
		var ret float32
		return ret
	}
	return *o.MatchedAddress
}

// GetMatchedAddressOk returns a tuple with the MatchedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedProperties) GetMatchedAddressOk() (*float32, bool) {
	if o == nil || IsNil(o.MatchedAddress) {
		return nil, false
	}
	return o.MatchedAddress, true
}

// HasMatchedAddress returns a boolean if a field has been set.
func (o *IdentityEnhancedProperties) HasMatchedAddress() bool {
	if o != nil && !IsNil(o.MatchedAddress) {
		return true
	}

	return false
}

// SetMatchedAddress gets a reference to the given float32 and assigns it to the MatchedAddress field.
func (o *IdentityEnhancedProperties) SetMatchedAddress(v float32) {
	o.MatchedAddress = &v
}

// GetMatchedAddresses returns the MatchedAddresses field value if set, zero value otherwise.
func (o *IdentityEnhancedProperties) GetMatchedAddresses() []IdentityEnhancedPropertiesMatchedAddressesInner {
	if o == nil || IsNil(o.MatchedAddresses) {
		var ret []IdentityEnhancedPropertiesMatchedAddressesInner
		return ret
	}
	return o.MatchedAddresses
}

// GetMatchedAddressesOk returns a tuple with the MatchedAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedProperties) GetMatchedAddressesOk() ([]IdentityEnhancedPropertiesMatchedAddressesInner, bool) {
	if o == nil || IsNil(o.MatchedAddresses) {
		return nil, false
	}
	return o.MatchedAddresses, true
}

// HasMatchedAddresses returns a boolean if a field has been set.
func (o *IdentityEnhancedProperties) HasMatchedAddresses() bool {
	if o != nil && !IsNil(o.MatchedAddresses) {
		return true
	}

	return false
}

// SetMatchedAddresses gets a reference to the given []IdentityEnhancedPropertiesMatchedAddressesInner and assigns it to the MatchedAddresses field.
func (o *IdentityEnhancedProperties) SetMatchedAddresses(v []IdentityEnhancedPropertiesMatchedAddressesInner) {
	o.MatchedAddresses = v
}

func (o IdentityEnhancedProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityEnhancedProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchedAddress) {
		toSerialize["matched_address"] = o.MatchedAddress
	}
	if !IsNil(o.MatchedAddresses) {
		toSerialize["matched_addresses"] = o.MatchedAddresses
	}
	return toSerialize, nil
}

type NullableIdentityEnhancedProperties struct {
	value *IdentityEnhancedProperties
	isSet bool
}

func (v NullableIdentityEnhancedProperties) Get() *IdentityEnhancedProperties {
	return v.value
}

func (v *NullableIdentityEnhancedProperties) Set(val *IdentityEnhancedProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEnhancedProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEnhancedProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEnhancedProperties(val *IdentityEnhancedProperties) *NullableIdentityEnhancedProperties {
	return &NullableIdentityEnhancedProperties{value: val, isSet: true}
}

func (v NullableIdentityEnhancedProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEnhancedProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
