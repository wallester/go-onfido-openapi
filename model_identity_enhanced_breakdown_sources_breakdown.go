/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the IdentityEnhancedBreakdownSourcesBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityEnhancedBreakdownSourcesBreakdown{}

// IdentityEnhancedBreakdownSourcesBreakdown struct for IdentityEnhancedBreakdownSourcesBreakdown
type IdentityEnhancedBreakdownSourcesBreakdown struct {
	TotalSources *IdentityEnhancedBreakdownSourcesBreakdownTotalSources `json:"total_sources,omitempty"`
}

// NewIdentityEnhancedBreakdownSourcesBreakdown instantiates a new IdentityEnhancedBreakdownSourcesBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEnhancedBreakdownSourcesBreakdown() *IdentityEnhancedBreakdownSourcesBreakdown {
	this := IdentityEnhancedBreakdownSourcesBreakdown{}
	return &this
}

// NewIdentityEnhancedBreakdownSourcesBreakdownWithDefaults instantiates a new IdentityEnhancedBreakdownSourcesBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEnhancedBreakdownSourcesBreakdownWithDefaults() *IdentityEnhancedBreakdownSourcesBreakdown {
	this := IdentityEnhancedBreakdownSourcesBreakdown{}
	return &this
}

// GetTotalSources returns the TotalSources field value if set, zero value otherwise.
func (o *IdentityEnhancedBreakdownSourcesBreakdown) GetTotalSources() IdentityEnhancedBreakdownSourcesBreakdownTotalSources {
	if o == nil || IsNil(o.TotalSources) {
		var ret IdentityEnhancedBreakdownSourcesBreakdownTotalSources
		return ret
	}
	return *o.TotalSources
}

// GetTotalSourcesOk returns a tuple with the TotalSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEnhancedBreakdownSourcesBreakdown) GetTotalSourcesOk() (*IdentityEnhancedBreakdownSourcesBreakdownTotalSources, bool) {
	if o == nil || IsNil(o.TotalSources) {
		return nil, false
	}
	return o.TotalSources, true
}

// HasTotalSources returns a boolean if a field has been set.
func (o *IdentityEnhancedBreakdownSourcesBreakdown) HasTotalSources() bool {
	if o != nil && !IsNil(o.TotalSources) {
		return true
	}

	return false
}

// SetTotalSources gets a reference to the given IdentityEnhancedBreakdownSourcesBreakdownTotalSources and assigns it to the TotalSources field.
func (o *IdentityEnhancedBreakdownSourcesBreakdown) SetTotalSources(v IdentityEnhancedBreakdownSourcesBreakdownTotalSources) {
	o.TotalSources = &v
}

func (o IdentityEnhancedBreakdownSourcesBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityEnhancedBreakdownSourcesBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalSources) {
		toSerialize["total_sources"] = o.TotalSources
	}
	return toSerialize, nil
}

type NullableIdentityEnhancedBreakdownSourcesBreakdown struct {
	value *IdentityEnhancedBreakdownSourcesBreakdown
	isSet bool
}

func (v NullableIdentityEnhancedBreakdownSourcesBreakdown) Get() *IdentityEnhancedBreakdownSourcesBreakdown {
	return v.value
}

func (v *NullableIdentityEnhancedBreakdownSourcesBreakdown) Set(val *IdentityEnhancedBreakdownSourcesBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEnhancedBreakdownSourcesBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEnhancedBreakdownSourcesBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEnhancedBreakdownSourcesBreakdown(val *IdentityEnhancedBreakdownSourcesBreakdown) *NullableIdentityEnhancedBreakdownSourcesBreakdown {
	return &NullableIdentityEnhancedBreakdownSourcesBreakdown{value: val, isSet: true}
}

func (v NullableIdentityEnhancedBreakdownSourcesBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEnhancedBreakdownSourcesBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
