/*
Onfido API v3.6

The Onfido API is used to submit check requests.

API version: 3.6.0
Contact: engineering@onfido.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// checks if the KnownFacesBreakdown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KnownFacesBreakdown{}

// KnownFacesBreakdown struct for KnownFacesBreakdown
type KnownFacesBreakdown struct {
	PreviouslySeenFaces *KnownFacesBreakdownPreviouslySeenFaces `json:"previously_seen_faces,omitempty"`
	ImageIntegrity      *KnownFacesBreakdownImageIntegrity      `json:"image_integrity,omitempty"`
}

// NewKnownFacesBreakdown instantiates a new KnownFacesBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKnownFacesBreakdown() *KnownFacesBreakdown {
	this := KnownFacesBreakdown{}
	return &this
}

// NewKnownFacesBreakdownWithDefaults instantiates a new KnownFacesBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKnownFacesBreakdownWithDefaults() *KnownFacesBreakdown {
	this := KnownFacesBreakdown{}
	return &this
}

// GetPreviouslySeenFaces returns the PreviouslySeenFaces field value if set, zero value otherwise.
func (o *KnownFacesBreakdown) GetPreviouslySeenFaces() KnownFacesBreakdownPreviouslySeenFaces {
	if o == nil || IsNil(o.PreviouslySeenFaces) {
		var ret KnownFacesBreakdownPreviouslySeenFaces
		return ret
	}
	return *o.PreviouslySeenFaces
}

// GetPreviouslySeenFacesOk returns a tuple with the PreviouslySeenFaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KnownFacesBreakdown) GetPreviouslySeenFacesOk() (*KnownFacesBreakdownPreviouslySeenFaces, bool) {
	if o == nil || IsNil(o.PreviouslySeenFaces) {
		return nil, false
	}
	return o.PreviouslySeenFaces, true
}

// HasPreviouslySeenFaces returns a boolean if a field has been set.
func (o *KnownFacesBreakdown) HasPreviouslySeenFaces() bool {
	if o != nil && !IsNil(o.PreviouslySeenFaces) {
		return true
	}

	return false
}

// SetPreviouslySeenFaces gets a reference to the given KnownFacesBreakdownPreviouslySeenFaces and assigns it to the PreviouslySeenFaces field.
func (o *KnownFacesBreakdown) SetPreviouslySeenFaces(v KnownFacesBreakdownPreviouslySeenFaces) {
	o.PreviouslySeenFaces = &v
}

// GetImageIntegrity returns the ImageIntegrity field value if set, zero value otherwise.
func (o *KnownFacesBreakdown) GetImageIntegrity() KnownFacesBreakdownImageIntegrity {
	if o == nil || IsNil(o.ImageIntegrity) {
		var ret KnownFacesBreakdownImageIntegrity
		return ret
	}
	return *o.ImageIntegrity
}

// GetImageIntegrityOk returns a tuple with the ImageIntegrity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KnownFacesBreakdown) GetImageIntegrityOk() (*KnownFacesBreakdownImageIntegrity, bool) {
	if o == nil || IsNil(o.ImageIntegrity) {
		return nil, false
	}
	return o.ImageIntegrity, true
}

// HasImageIntegrity returns a boolean if a field has been set.
func (o *KnownFacesBreakdown) HasImageIntegrity() bool {
	if o != nil && !IsNil(o.ImageIntegrity) {
		return true
	}

	return false
}

// SetImageIntegrity gets a reference to the given KnownFacesBreakdownImageIntegrity and assigns it to the ImageIntegrity field.
func (o *KnownFacesBreakdown) SetImageIntegrity(v KnownFacesBreakdownImageIntegrity) {
	o.ImageIntegrity = &v
}

func (o KnownFacesBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KnownFacesBreakdown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PreviouslySeenFaces) {
		toSerialize["previously_seen_faces"] = o.PreviouslySeenFaces
	}
	if !IsNil(o.ImageIntegrity) {
		toSerialize["image_integrity"] = o.ImageIntegrity
	}
	return toSerialize, nil
}

type NullableKnownFacesBreakdown struct {
	value *KnownFacesBreakdown
	isSet bool
}

func (v NullableKnownFacesBreakdown) Get() *KnownFacesBreakdown {
	return v.value
}

func (v *NullableKnownFacesBreakdown) Set(val *KnownFacesBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableKnownFacesBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableKnownFacesBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKnownFacesBreakdown(val *KnownFacesBreakdown) *NullableKnownFacesBreakdown {
	return &NullableKnownFacesBreakdown{value: val, isSet: true}
}

func (v NullableKnownFacesBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKnownFacesBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
